#!/usr/bin/python
# -*- coding: utf-8 -*-

import re
import random
import sys
import os
import utils.optparser as _optparser

opt_parser = _optparser.OptParser()

pattern = opt_parser.get_param( short_name = 'p', long_name = 'pattern', comment = 'File pattern' )
if pattern:
	if not pattern.startswith( '^' ):
		pattern = '^' + pattern
	if not pattern.endswith( '$' ):
		pattern = pattern + '$'

containing = opt_parser.get_param( short_name = 'c', long_name = 'containing', comment = 'Search only for files containing this string' )

number = int( opt_parser.get_param( short_name = 'n', long_name = 'number', default = 10, comment = 'Number of files' ) )

show_help = opt_parser.has_param( short_name = 'h', long_name = 'help', comment = 'This help' )

path = opt_parser.args_left()
if path:
	path = path[ 0 ]
else:
	path = '.'

if show_help:
	command = sys.argv[ 0 ].split( '/' )[ -1 ]
	print "Usage: %(command)s --pattern=\"...\" --number=n..." % vars()
	print 'All options:'
	print '\n'.join( opt_parser.get_comments() )
	sys.exit( 0 )

all_files = []

for root, dirs, files in os.walk( path ):
	for file_name in files:
		if not pattern or re.match( pattern, file_name ):
			file_path = '%s/%s' % ( root, file_name )
			if containing:
				f = open( file_path, 'r' )
				contents = f.read()
				f.close()
				if contents.find( containing ) >= 0:
					all_files.append( file_path )
			else:
				all_files.append( file_path )

if number > len( all_files ):
	sample = all_files
else:
	sample = random.sample( all_files, number )

for file_name in sample:
	print file_name
