#!/usr/bin/python
# -*- coding: utf-8 -*-
"""
2010-07-02: 
 * Unused jars
2010-07-05: 
 * Percentage of classes loaded from used jars
"""
import os
import sys
import re

from utils import java as javautils

if len( sys.argv ) <= 2:
	print "Usage:"
	command = sys.argv[ 0 ].split( '/' )[ -1 ]
	print "%s <log_file> <jar1>, <jar2>, ..." % command
	print "	log_file must be the output  file generated with \"java -verbose:class ...\""
	sys.exit( 1 )

log_file = sys.argv[ 1 ]
jars = sys.argv[ 2: ]

used_jars = []

jars_classes = {}

file = open( log_file, 'r' )
for line in file:
	line = line.strip()
	all = re.findall( '\[Loaded.([^\s]+).from.([^\s]+)\]', line )
	if len( all ) > 0 and len( all[ 0 ] ) > 1:
		all = all[ 0 ]
		classs = all[ 0 ]
		jar = all[ 1 ]

		if jar[ : 5 ] == 'file:':
			jar = jar[ 5 : ]

		if not jar in jars_classes.keys():
			jars_classes[ jar ] = []
		if not classs in jars_classes[ jar ]:
			jars_classes[ jar ].append( classs )

		if not jar in used_jars:
			jar = jar.split( '/' )[ -1 ]
			used_jars.append( jar )

file.close()

print 'Used jars:'
for jar, classes in jars_classes.items():
	all_classes = get_jar_contents( jar )
	classes_no = len( classes )
	all_classes_no = len( all_classes )
	percentage = 0
	if all_classes_no > 0:
		percentage = int( 100. * classes_no / all_classes_no )
	print '%(classes_no)5s of %(all_classes_no)5s (%(percentage)3s%%) classes loaded from %(jar)s' % vars()

print
print 'Unused jar (candidates):'
for jar in jars:
	if jar in used_jars:
		#print 'Used:%s' % jar
		pass
	else:
		print ' * %s' % jar
